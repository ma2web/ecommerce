{"version":3,"sources":["../node_modules/@coreui/icons/js/free/cil-plus.js","../node_modules/@coreui/icons/js/free/cil-pen-alt.js","views/products/filter/FilterList.js","views/products/filter/FilterEditModal.js","views/products/filter/FilterForm.js","views/products/filter/Filter.js"],"names":["cilPlus","cilPenAlt","FilterList","filters","handleDelete","setVisible","setSelectedFilter","className","map","filter","name","cilTrash","style","color","cursor","marginLeft","onClick","_id","shape","content","values","el","join","length","FilterEditModal","visible","selectedFilter","categories","getAllData","React","useState","setValues","value","setValue","setName","selectedCategory","setSelectedCategory","useEffect","find","category","handleSubmit","e","a","preventDefault","axios","put","api","status","toast","success","onClose","type","id","placeholder","onChange","target","htmlFor","newArr","FilterForm","setCategories","setFilters","editModal","setEditModal","post","headers","get","getFilters","data","delete","getCategories","class","Filter"],"mappings":"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","file":"static/js/13.71dcb5dd.chunk.js","sourcesContent":["export const cilPlus = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='440 240 272 240 272 72 240 72 240 240 72 240 72 272 240 272 240 440 272 440 272 272 440 272 440 240' class='ci-primary'/>\"]","export const cilPenAlt = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M23.686,456.521a24.841,24.841,0,0,0,6,25.708l.087.087a24.841,24.841,0,0,0,17.612,7.342,25.179,25.179,0,0,0,8.1-1.344h0a646.28,646.28,0,0,0,248.04-154.207L469.981,167.646A88.832,88.832,0,1,0,344.354,42.019l-9.534,9.534L314.029,30.762a50.4,50.4,0,0,0-71.274,0L108.687,164.83l22.626,22.627L265.382,53.389a18.4,18.4,0,0,1,26.019,0L312.193,74.18l-134.3,134.3A646.28,646.28,0,0,0,23.686,456.521Zm343.3-391.875a56.832,56.832,0,1,1,80.373,80.373l-89.493,89.493-80.372-80.373ZM254.862,176.766l80.372,80.372L280.892,311.48A614.383,614.383,0,0,1,58.779,453.221,614.383,614.383,0,0,1,200.52,231.108Z' class='ci-primary'/>\"]","import React, { useEffect } from 'react';\nimport { cilDelete, cilPen, cilPenAlt, cilPlus, cilTrash } from '@coreui/icons';\nimport {\n  CBadge,\n  CButton,\n  CCol,\n  CFormFloating,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CListGroup,\n  CListGroupItem,\n  CRow,\n  CTooltip,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { api, headers } from 'src/views/api';\nimport axios from 'axios';\n\nconst FilterList = ({\n  filters,\n  handleDelete,\n  setVisible,\n  setSelectedFilter,\n}) => {\n  return (\n    <div className='col-md-9'>\n      <div>\n        <CListGroup>\n          {filters.map((filter) => (\n            <CListGroupItem className='d-flex justify-content-between align-items-center'>\n              {filter?.name}\n              <div>\n                <CIcon\n                  name={cilTrash}\n                  style={{\n                    color: 'red',\n                    cursor: 'pointer',\n                    marginLeft: 16,\n                  }}\n                  onClick={() => handleDelete(filter._id)}\n                />\n                <CIcon\n                  name={cilPenAlt}\n                  style={{ cursor: 'pointer', marginLeft: 16 }}\n                  onClick={() => {\n                    setSelectedFilter(filter);\n                    setVisible(true);\n                  }}\n                />\n                <CBadge color='primary' shape='rounded-pill'>\n                  <CTooltip\n                    content={filter?.values?.map((el) => el.name)?.join(' - ')}\n                  >\n                    <span>{filter?.values?.length}</span>\n                  </CTooltip>\n                </CBadge>\n              </div>\n            </CListGroupItem>\n          ))}\n        </CListGroup>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterList;\n","import { cilPlus } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport {\n  CButton,\n  CFormFloating,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n} from '@coreui/react';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { api } from 'src/views/api';\n\nconst FilterEditModal = ({\n  visible,\n  setVisible,\n  selectedFilter,\n  setSelectedFilter,\n  categories,\n  getAllData\n}) => {\n  const [values, setValues] = React.useState([]);\n  const [value, setValue] = React.useState('');\n  const [name, setName] = React.useState();\n  const [selectedCategory, setSelectedCategory] = React.useState(null);\n\n  useEffect(() => {\n    setValues(selectedFilter?.values);\n    setName(selectedFilter?.name);\n    setSelectedCategory(categories?.find((el) => el._id === selectedFilter?.category)?._id);\n  }, [selectedFilter]);\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const result = await axios.put(`${api}/api/filter/${selectedFilter?._id}`, {\n      name,\n      category: selectedCategory,\n      values,\n    });\n\n    if(result.status === 200) {\n      await getAllData()\n      toast.success('فیلتر با موفقیت ویرایش شد.');\n      setSelectedFilter(null);\n      setVisible(false);\n    }\n  }\n  return (\n    <CModal visible={visible} onClose={() => setVisible(false)}>\n      <CModalHeader onClose={() => setVisible(false)}>\n        <CModalTitle>ویرایش فیلتر</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <div className='row'>\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='col-md-12 mb-3'>\n                <CFormFloating>\n                  <CFormInput\n                    type='text'\n                    id='name'\n                    placeholder='نام فیلتر را وارد کنید'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                  <CFormLabel htmlFor='name'>نام فیلتر</CFormLabel>\n                </CFormFloating>\n              </div>\n              <div className='col-md-12 mb-3'>\n                <CFormFloating>\n                  <CFormSelect\n                    id='floatingSelectGrid'\n                    aria-label='Floating label select example'\n                    onChange={(e) => setSelectedCategory(e.target.value)}\n                    value={selectedCategory}\n                  >\n                    <option>انتخاب کنید</option>\n                    {categories.map((category) => (\n                      <option value={category._id}>{category.name}</option>\n                    ))}\n                  </CFormSelect>\n                  <CFormLabel htmlFor='floatingSelectGrid'>\n                    دسته بندی مورد نظر\n                  </CFormLabel>\n                </CFormFloating>\n              </div>\n              <div className='col-md-12 mb-3'>\n                <div className='row align-items-center'>\n                  <div className='col-md-10 mb-3'>\n                    <CFormFloating>\n                      <CFormInput\n                        type='text'\n                        id='value'\n                        value={value}\n                        onChange={(e) => setValue(e.target.value)}\n                        placeholder='مقادیر فیلتر را وارد و بروی Enter بزنید'\n                      />\n                      <CFormLabel htmlFor='name'>مقادیر</CFormLabel>\n                    </CFormFloating>\n                  </div>\n                  <div className='col-md-2'>\n                    <CButton\n                      shape='rounded-pill'\n                      color='primary'\n                      onClick={() => {\n                        setValues([...values, { name: value }]);\n                        setValue('');\n                      }}\n                    >\n                      <CIcon name={cilPlus} />\n                    </CButton>\n                  </div>\n                  <div className='col-md-12'>\n                    {values?.map((el) => {\n                      return (\n                        <CButton\n                          color='warning'\n                          shape='rounded-pill'\n                          onClick={() => {\n                            const arr = [...values];\n                            const newArr = values.filter(\n                              (e) => e.name !== el.name\n                            );\n                            setValues(newArr);\n                          }}\n                        >\n                          {el?.name}\n                        </CButton>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CModalBody>\n      <CModalFooter>\n        <CButton color='secondary' onClick={() => setVisible(false)}>\n          انصراف\n        </CButton>\n        <CButton color='primary' onClick={handleSubmit}>ذخیره تغییرات</CButton>\n      </CModalFooter>\n    </CModal>\n  );\n};\n\nexport default FilterEditModal;\n","import React, { useEffect } from 'react';\nimport { cilDelete, cilPen, cilPenAlt, cilPlus, cilTrash } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport {\n  CBadge,\n  CButton,\n  CCol,\n  CFormFloating,\n  CFormInput,\n  CFormLabel,\n  CFormSelect,\n  CListGroup,\n  CListGroupItem,\n  CRow,\n} from '@coreui/react';\nimport FilterList from './FilterList';\nimport axios from 'axios';\nimport { api, headers } from 'src/views/api';\nimport FilterEditModal from './FilterEditModal';\n\nconst FilterForm = () => {\n  const [values, setValues] = React.useState([]);\n  const [value, setValue] = React.useState('');\n  const [name, setName] = React.useState([]);\n  const [categories, setCategories] = React.useState([]);\n  const [selectedCategory, setSelectedCategory] = React.useState(null);\n  const [filters, setFilters] = React.useState([]);\n  const [selectedFilter, setSelectedFilter] = React.useState(null);\n  const [editModal, setEditModal] = React.useState(false);\n\n  useEffect(async () => {\n    getAllData()\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const result = await axios.post(\n      `${api}/api/filter`,\n      {\n        name: name,\n        category: selectedCategory,\n        values,\n      },\n      { headers }\n    );\n\n    if (result.status === 200) {\n      const getFilters = await axios.get(`${api}/api/filters`, { headers });\n      setFilters(getFilters?.data);\n      setName('');\n      setValue('');\n      setValues([]);\n      setSelectedCategory(null);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    const result = await axios.delete(`${api}/api/filter/${id}`, { headers });\n\n    if (result.status === 200) {\n      const getFilters = await axios.get(`${api}/api/filters`, { headers });\n      setFilters(getFilters?.data);\n    }\n  };\n\n  const getAllData = async () => {\n    const getCategories = await axios.get(`${api}/api/categories`, { headers });\n    setCategories(getCategories?.data?.categories);\n    const getFilters = await axios.get(`${api}/api/filters`, { headers });\n    setFilters(getFilters?.data);\n  }\n\n\n  return (\n    <div className='container p-4'>\n      <div className='row'>\n        <div className='col-md-12'>\n              <div className='row'>\n                <FilterEditModal\n                  visible={editModal}\n                  setVisible={setEditModal}\n                  selectedFilter={selectedFilter}\n                  setSelectedFilter={setSelectedFilter}\n                  categories={categories}\n                  getAllData={getAllData}\n                />\n                <FilterList\n                  filters={filters}\n                  handleDelete={handleDelete}\n                  setVisible={setEditModal}\n                  setSelectedFilter={setSelectedFilter}\n                />\n                <div className='col-md-3'>\n                  <div className='row'>\n                    <div className='col-md-12 mb-3'>\n                      <CFormFloating>\n                        <CFormInput\n                          type='text'\n                          id='name'\n                          placeholder='نام فیلتر را وارد کنید'\n                          value={name}\n                          onChange={(e) => setName(e.target.value)}\n                        />\n                        <CFormLabel htmlFor='name'>نام فیلتر</CFormLabel>\n                      </CFormFloating>\n                    </div>\n                    <div className='col-md-12 mb-3'>\n                      <CFormFloating>\n                        <CFormSelect\n                          id='floatingSelectGrid'\n                          aria-label='Floating label select example'\n                          onChange={(e) => setSelectedCategory(e.target.value)}\n                        >\n                          <option>انتخاب کنید</option>\n                          {categories.map((category) => (\n                            <option value={category._id}>\n                              {category.name}\n                            </option>\n                          ))}\n                        </CFormSelect>\n                        <CFormLabel htmlFor='floatingSelectGrid'>\n                          دسته بندی مورد نظر\n                        </CFormLabel>\n                      </CFormFloating>\n                    </div>\n                    <div className='col-md-12 mb-3'>\n                      <div className='row align-items-center'>\n                        <div className='col-md-10 mb-3'>\n                          <CFormFloating>\n                            <CFormInput\n                              type='text'\n                              id='value'\n                              value={value}\n                              onChange={(e) => setValue(e.target.value)}\n                              placeholder='مقادیر فیلتر را وارد و بروی Enter بزنید'\n                            />\n                            <CFormLabel htmlFor='name'>مقادیر</CFormLabel>\n                          </CFormFloating>\n                        </div>\n                        <div className='col-md-2'>\n                          <CButton\n                            shape='rounded-pill'\n                            color='primary'\n                            onClick={() => {\n                              setValues([...values, { name: value }]);\n                              setValue('');\n                            }}\n                          >\n                            <CIcon name={cilPlus} />\n                          </CButton>\n                        </div>\n                        <div className='col-md-12'>\n                          {values?.map((el) => {\n                            return (\n                              <CButton\n                                color='warning'\n                                shape='rounded-pill'\n                                onClick={() => {\n                                  const arr = [...values];\n                                  const newArr = values.filter(\n                                    (e) => e.name !== el.name\n                                  );\n                                  setValues(newArr);\n                                }}\n                              >\n                                {el?.name}\n                              </CButton>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    </div>\n                    <div className='col-md-12'>\n                      <button\n                        type='button'\n                        class='btn btn-secondary btn-lg btn-block'\n                        onClick={handleSubmit}\n                      >\n                        افزودن فیلتر\n                      </button>\n                    </div>\n                  </div>\n                </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterForm;\n","import React from 'react';\nimport FilterForm from './FilterForm';\n\nconst Filter = () => {\n  return (\n    <div>\n      <div className='jumbotron jumbotron-fluid mb-3'>\n        <div className='container'>\n          <h1 className='display-4'>فیلترها</h1>\n          <p className='lead'>\n            فیلترهای مورد نظر برای هر دسته بندی را برای خود بسازید.\n          </p>\n        </div>\n        <div className='dropdown-divider'></div>\n      </div>\n        <FilterForm />\n    </div>\n  );\n};\n\nexport default Filter;\n"],"sourceRoot":""}
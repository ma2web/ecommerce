{"version":3,"sources":["views/forms/range/Range.js"],"names":["Range","xs","name","href","className","htmlFor","id","disabled","min","max","defaultValue","step"],"mappings":"6KAAA,0CAoGeA,UAxFD,WACZ,OACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAMC,GAAI,GAAV,SACE,cAAC,IAAD,CAAaC,KAAK,QAAQC,KAAK,kBAEjC,cAAC,IAAD,CAAMF,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,6BAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,2BACgB,wDAAgD,IADhE,iBAEgB,gDAFhB,OAIA,eAAC,IAAD,CAAaD,KAAK,cAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,eAApB,2BACA,cAAC,IAAD,CAAYC,GAAG,4BAKvB,cAAC,IAAD,CAAML,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,gDAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,qBACU,4CADV,kGAIA,eAAC,IAAD,CAAaD,KAAK,uBAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,gBAApB,4BACA,cAAC,IAAD,CAAYC,GAAG,gBAAgBC,UAAQ,eAK/C,cAAC,IAAD,CAAMN,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,mDAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,mDACwC,uCADxC,OAC6D,IAC3D,uCAFF,SAEmB,qCAFnB,QAEsC,uCAFtC,iEAG+D,IAC7D,uCAJF,QAIuB,uCAJvB,kBAMA,eAAC,IAAD,CAAaD,KAAK,0BAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,eAApB,2BACA,cAAC,IAAD,CAAYG,IAAI,IAAIC,IAAI,IAAIC,aAAa,IAAIJ,GAAG,4BAKxD,cAAC,IAAD,CAAML,GAAI,GAAV,SACE,eAAC,IAAD,CAAOG,UAAU,OAAjB,UACE,eAAC,IAAD,WACE,iDADF,IAC+B,6CAE/B,eAAC,IAAD,WACE,oBAAGA,UAAU,6BAAb,kGAEiC,wCAFjC,uEAGwD,IACtD,8CAJF,OAMA,eAAC,IAAD,CAAaD,KAAK,oBAAlB,UACE,cAAC,IAAD,CAAYE,QAAQ,eAApB,2BACA,cAAC,IAAD,CACEG,IAAI,IACJC,IAAI,IACJE,KAAK,MACLD,aAAa,IACbJ,GAAG","file":"static/js/42.502ff3e2.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CFormLabel,\n  CFormRange,\n  CRow,\n} from \"@coreui/react\";\nimport { DocsCallout, DocsExample } from \"src/components\";\n\nconst Range = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Range\" href=\"forms/range\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small></small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Create custom <code>&lt;input type=&#34;range&#34;&gt;</code>{\" \"}\n              controls with <code>&lt;CFormRange&gt;</code>.\n            </p>\n            <DocsExample href=\"forms/range\">\n              <CFormLabel htmlFor=\"customRange1\">Example range</CFormLabel>\n              <CFormRange id=\"customRange1\" />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small>Disabled</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add the <code>disabled</code> boolean attribute on an input to\n              give it a grayed out appearance and remove pointer events.\n            </p>\n            <DocsExample href=\"forms/range#disabled\">\n              <CFormLabel htmlFor=\"disabledRange\">Disabled range</CFormLabel>\n              <CFormRange id=\"disabledRange\" disabled />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small>Min and max</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Range inputs have implicit values for <code>min</code> and{\" \"}\n              <code>max</code>â€”<code>0</code> and <code>100</code>,\n              respectively. You may specify new values for those using the{\" \"}\n              <code>min</code> and <code>max</code> attributes.\n            </p>\n            <DocsExample href=\"forms/range#min-and-max\">\n              <CFormLabel htmlFor=\"customRange2\">Example range</CFormLabel>\n              <CFormRange min=\"0\" max=\"5\" defaultValue=\"3\" id=\"customRange2\" />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Range</strong> <small>Steps</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              By default, range inputs &#34;snap&#34; to integer values. To\n              change this, you can specify a <code>step</code> value. In the\n              example below, we double the number of steps by using{\" \"}\n              <code>step=&#34;0.5&#34;</code>.\n            </p>\n            <DocsExample href=\"forms/range#steps\">\n              <CFormLabel htmlFor=\"customRange3\">Example range</CFormLabel>\n              <CFormRange\n                min=\"0\"\n                max=\"5\"\n                step=\"0.5\"\n                defaultValue=\"3\"\n                id=\"customRange3\"\n              />\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default Range;\n"],"sourceRoot":""}
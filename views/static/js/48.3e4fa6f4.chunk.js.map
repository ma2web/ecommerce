{"version":3,"sources":["views/notifications/modals/Modals.js"],"names":["LiveDemo","useState","visible","setVisible","onClick","onClose","color","StaticBackdrop","backdrop","ScrollingLongContent","ScrollingLongContent2","scrollable","VerticallyCentered","alignment","VerticallyCentered2","TooltipsPopovers","title","content","OptionalSizes","visibleXL","setVisibleXL","visibleLg","setVisibleLg","visibleSm","setVisibleSm","size","FullscreenModal","visibleMd","setVisibleMd","visibleXXL","setVisibleXXL","fullscreen","Modals","xs","name","href","className","keyboard","portal"],"mappings":"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","file":"static/js/48.3e4fa6f4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CLink,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CPopover,\n  CRow,\n  CTooltip,\n} from \"@coreui/react\";\nimport { DocsCallout, DocsExample } from \"src/components\";\n\nconst LiveDemo = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\n      <CModal visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          Woohoo, you&#39;re reading this text in a modal!\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\">Save changes</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nconst StaticBackdrop = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>\n        Launch static backdrop modal\n      </CButton>\n      <CModal\n        backdrop=\"static\"\n        visible={visible}\n        onClose={() => setVisible(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          I will not close if you click outside me. Don&#39;teven try to press\n          escape key.\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\">Save changes</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nconst ScrollingLongContent = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\n      <CModal visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\">Save changes</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nconst ScrollingLongContent2 = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\n      <CModal scrollable visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\">Save changes</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nconst VerticallyCentered = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>\n        Vertically centered modal\n      </CButton>\n      <CModal\n        alignment=\"center\"\n        visible={visible}\n        onClose={() => setVisible(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n          dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\n          consectetur ac, vestibulum at eros.\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\">Save changes</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nconst VerticallyCentered2 = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>\n        Vertically centered scrollable modal\n      </CButton>\n      <CModal\n        alignment=\"center\"\n        scrollable\n        visible={visible}\n        onClose={() => setVisible(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n          <p>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n            cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n            dui. Donec ullamcorper nulla non metus auctor fringilla.\n          </p>\n          <p>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n            dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n            ac consectetur ac, vestibulum at eros.\n          </p>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\n            Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n            auctor.\n          </p>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\">Save changes</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nconst TooltipsPopovers = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>Launch demo modal</CButton>\n      <CModal\n        alignment=\"center\"\n        visible={visible}\n        onClose={() => setVisible(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <h5>Popover in a modal</h5>\n          <p>\n            This\n            <CPopover\n              title=\"Popover title\"\n              content=\"Popover body content is set in this property.\"\n            >\n              <CButton>button</CButton>\n            </CPopover>{\" \"}\n            triggers a popover on click.\n          </p>\n          <hr />\n          <h5>Tooltips in a modal</h5>\n          <p>\n            <CTooltip content=\"Tooltip\">\n              <CLink>This link</CLink>\n            </CTooltip>{\" \"}\n            and\n            <CTooltip content=\"Tooltip\">\n              <CLink>that link</CLink>\n            </CTooltip>{\" \"}\n            have tooltips on hover.\n          </p>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\">Save changes</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nconst OptionalSizes = () => {\n  const [visibleXL, setVisibleXL] = useState(false);\n  const [visibleLg, setVisibleLg] = useState(false);\n  const [visibleSm, setVisibleSm] = useState(false);\n  return (\n    <>\n      <CButton onClick={() => setVisibleXL(!visibleXL)}>\n        Extra large modal\n      </CButton>\n      <CButton onClick={() => setVisibleLg(!visibleLg)}>Large modal</CButton>\n      <CButton onClick={() => setVisibleSm(!visibleSm)}>\n        Small large modal\n      </CButton>\n      <CModal size=\"xl\" visible={visibleXL} onClose={() => setVisibleXL(false)}>\n        <CModalHeader>\n          <CModalTitle>Extra large modal</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n      <CModal size=\"lg\" visible={visibleLg} onClose={() => setVisibleLg(false)}>\n        <CModalHeader>\n          <CModalTitle>Large modal</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n      <CModal size=\"sm\" visible={visibleSm} onClose={() => setVisibleSm(false)}>\n        <CModalHeader>\n          <CModalTitle>Small modal</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n    </>\n  );\n};\n\nconst FullscreenModal = () => {\n  const [visible, setVisible] = useState(false);\n  const [visibleSm, setVisibleSm] = useState(false);\n  const [visibleMd, setVisibleMd] = useState(false);\n  const [visibleLg, setVisibleLg] = useState(false);\n  const [visibleXL, setVisibleXL] = useState(false);\n  const [visibleXXL, setVisibleXXL] = useState(false);\n\n  return (\n    <>\n      <CButton onClick={() => setVisible(!visible)}>Full screen</CButton>\n      <CButton onClick={() => setVisibleSm(!visibleSm)}>\n        Full screen below sm\n      </CButton>\n      <CButton onClick={() => setVisibleMd(!visibleMd)}>\n        Full screen below md\n      </CButton>\n      <CButton onClick={() => setVisibleLg(!visibleLg)}>\n        Full screen below lg\n      </CButton>\n      <CButton onClick={() => setVisibleXL(!visibleXL)}>\n        Full screen below xl\n      </CButton>\n      <CButton onClick={() => setVisibleXXL(!visibleXXL)}>\n        Full screen below xxl\n      </CButton>\n      <CModal fullscreen visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader>\n          <CModalTitle>Full screen</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n      <CModal\n        fullscreen=\"sm\"\n        visible={visibleSm}\n        onClose={() => setVisibleSm(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Full screen below sm</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n      <CModal\n        fullscreen=\"md\"\n        visible={visibleMd}\n        onClose={() => setVisibleMd(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Full screen below md</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n      <CModal\n        fullscreen=\"lg\"\n        visible={visibleLg}\n        onClose={() => setVisibleLg(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Full screen below lg</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n      <CModal\n        fullscreen=\"xl\"\n        visible={visibleXL}\n        onClose={() => setVisibleXL(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Full screen below xl</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n      <CModal\n        fullscreen=\"xxl\"\n        visible={visibleXXL}\n        onClose={() => setVisibleXXL(false)}\n      >\n        <CModalHeader>\n          <CModalTitle>Full screen below xxl</CModalTitle>\n        </CModalHeader>\n        <CModalBody>...</CModalBody>\n      </CModal>\n    </>\n  );\n};\n\nconst Modals = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <DocsCallout name=\"Modal\" href=\"components/modal\" />\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Below is a static modal example (meaning its <code>position</code>{\" \"}\n              and <code>display</code> have been overridden). Included are the\n              modal header, modal body (required for <code>padding</code>), and\n              modal footer (optional). We ask that you include modal headers\n              with dismiss actions whenever possible, or provide another\n              explicit dismiss action.\n            </p>\n            <DocsExample href=\"components/modal\">\n              <CModal\n                className=\"show d-block position-static\"\n                backdrop={false}\n                keyboard={false}\n                portal={false}\n                visible\n              >\n                <CModalHeader>\n                  <CModalTitle>Modal title</CModalTitle>\n                </CModalHeader>\n                <CModalBody>Modal body text goes here.</CModalBody>\n                <CModalFooter>\n                  <CButton color=\"secondary\">Close</CButton>\n                  <CButton color=\"primary\">Save changes</CButton>\n                </CModalFooter>\n              </CModal>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong> <small>Live demo</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Toggle a working modal demo by clicking the button below. It will\n              slide down and fade in from the top of the page.\n            </p>\n            <DocsExample href=\"components/modal#live-demo\">\n              {LiveDemo()}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong> <small>Static backdrop</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              If you don’t provide an <code>onDimsiss</code> handler to the\n              Modal component, your modal will behave as though the backdrop is\n              static, meaning it will not close when clicking outside it. Click\n              the button below to try it.\n            </p>\n            <DocsExample href=\"components/modal#static-backdrop\">\n              {StaticBackdrop()}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong> <small>Scrolling long content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              If you don’t provide an <code>onDimsiss</code> handler to the\n              Modal component, your modal will behave as though the backdrop is\n              static, meaning it will not close when clicking outside it. Click\n              the button below to try it.\n            </p>\n            <DocsExample href=\"components/modal#scrolling-long-content\">\n              {ScrollingLongContent()}\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              You can also create a scrollable modal that allows scroll the\n              modal body by adding <code>scrollable</code> prop.\n            </p>\n            <DocsExample href=\"components/modal#scrolling-long-content\">\n              {ScrollingLongContent2()}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong> <small>Vertically centered</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Add <code>alignment=&#34;center&#34;</code> to{\" \"}\n              <code>&lt;CModal&gt;</code> to vertically center the modal.\n            </p>\n            <DocsExample href=\"components/modal#vertically-centered\">\n              {VerticallyCentered()}\n            </DocsExample>\n            <DocsExample href=\"components/modal#vertically-centered\">\n              {VerticallyCentered2()}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong> <small>Tooltips and popovers</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              <code>&lt;CTooltips&gt;</code> and <code>&lt;CPopovers&gt;</code>{\" \"}\n              can be placed within modals as needed. When modals are closed, any\n              tooltips and popovers within are also automatically dismissed.\n            </p>\n            <DocsExample href=\"components/modal#tooltips-and-popovers\">\n              {TooltipsPopovers()}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong> <small>Optional sizes</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Modals have three optional sizes, available via modifier classes\n              to be placed on a <code>&lt;CModal&gt;</code>. These sizes kick in\n              at certain breakpoints to avoid horizontal scrollbars on narrower\n              viewports.\n            </p>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Size</th>\n                  <th>Property size</th>\n                  <th>Modal max-width</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Small</td>\n                  <td>\n                    <code>&#39;sm&#39;</code>\n                  </td>\n                  <td>\n                    <code>300px</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Default</td>\n                  <td className=\"text-medium-emphasis\">None</td>\n                  <td>\n                    <code>500px</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Large</td>\n                  <td>\n                    <code>&#39;lg&#39;</code>\n                  </td>\n                  <td>\n                    <code>800px</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Extra large</td>\n                  <td>\n                    <code>&#39;xl&#39;</code>\n                  </td>\n                  <td>\n                    <code>1140px</code>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <DocsExample href=\"components/modal#optional-sizes\">\n              {OptionalSizes()}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Modal</strong> <small>Fullscreen Modal</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Another override is the option to pop up a modal that covers the\n              user viewport, available via property <code>fullscrean</code>.\n            </p>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Property fullscrean</th>\n                  <th>Availability</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code>true</code>\n                  </td>\n                  <td>Always</td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>&#39;sm&#39;</code>\n                  </td>\n                  <td>\n                    Below <code>576px</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>&#39;md&#39;</code>\n                  </td>\n                  <td>\n                    Below <code>768px</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>&#39;lg&#39;</code>\n                  </td>\n                  <td>\n                    Below <code>992px</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>&#39;xl&#39;</code>\n                  </td>\n                  <td>\n                    Below <code>1200px</code>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <code>&#39;xxl&#39;</code>\n                  </td>\n                  <td>\n                    Below <code>1400px</code>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <DocsExample href=\"components/modal#fullscreen-modal\">\n              {FullscreenModal()}\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default Modals;\n"],"sourceRoot":""}
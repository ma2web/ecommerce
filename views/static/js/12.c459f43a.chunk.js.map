{"version":3,"sources":["views/dashboard/Dashboard.js"],"names":["WidgetsDropdown","lazy","Dashboard","useState","users","setUsers","stores","setStores","products","setProducts","userId","localStorage","role","useEffect","a","axios","get","api","response","data","length","map","el","avatar","src","_id","user","name","firstName","lastName","new","registered","moment","createdAt","format","country","phoneNumber","countryCode","email","activity","updatedAt","xs","className","align","hover","responsive","color","icon","cilPeople","item","index","size","status"],"mappings":"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","file":"static/js/12.c459f43a.chunk.js","sourcesContent":["import { cilPeople } from '@coreui/icons';\nimport CIcon from '@coreui/icons-react';\nimport {\n  CAvatar,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react';\nimport axios from 'axios';\nimport moment from 'moment-jalaali';\nimport React, { lazy, useEffect, useState } from 'react';\nimport { api } from '../api.js';\nimport Products from '../products/products/Products.js';\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'));\n\nconst Dashboard = () => {\n  const [users, setUsers] = useState([]);\n  const [stores, setStores] = useState(0);\n  const [products, setProducts] = useState(0);\n  const userId = localStorage.userId;\n  const role = localStorage.role;\n\n  useEffect(async () => {\n    const users = await axios.get(`${api}/api/users`);\n    const stores = await axios.get(`${api}/api/stores`);\n\n    if (role === 'admin') {\n      const response = await axios.get(`${api}/api/products/${userId}`);\n      setProducts(response?.data?.length);\n    } else {\n      const response = await axios.get(`${api}/api/products`);\n      setProducts(response?.data?.length);\n    }\n\n    setUsers(\n      users?.data?.map((el) => {\n        return {\n          avatar: {\n            src: `${api}/uploads/customer/${el?._id}/${el?.avatar}`,\n            avatar: el?.avatar,\n          },\n          user: {\n            name: el?.firstName + ' ' + el?.lastName,\n            new: false,\n            registered: moment(el?.createdAt).format('jYYYY/jM/jD'),\n          },\n          country: {\n            phoneNumber: el?.phoneNumber,\n            countryCode: el?.countryCode,\n            email: el?.email,\n          },\n          activity: moment(el?.updatedAt).format('jYYYY/jM/jD'),\n        };\n      })\n    );\n\n    setStores(stores?.data?.length);\n  }, []);\n\n  return (\n    <>\n      <WidgetsDropdown users={users} stores={stores} products={products} />\n\n      {localStorage.role === 'super_admin' ? (\n        <CRow>\n          <CCol xs>\n            <CCard className='mb-4'>\n              <CCardHeader>لیست کاربران</CCardHeader>\n              <CCardBody>\n                <CTable align='middle' className='mb-0 border' hover responsive>\n                  <CTableHead color='light'>\n                    <CTableRow>\n                      <CTableHeaderCell className='text-center'>\n                        <CIcon icon={cilPeople} />\n                      </CTableHeaderCell>\n                      <CTableHeaderCell>کاربر</CTableHeaderCell>\n                      <CTableHeaderCell>ایمیل</CTableHeaderCell>\n                      <CTableHeaderCell>شماره همراه</CTableHeaderCell>\n                      <CTableHeaderCell>فعالیت</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {users.map((item, index) => (\n                      <CTableRow v-for='item in tableItems' key={index}>\n                        <CTableDataCell className='text-center'>\n                          {item?.avatar?.avatar && (\n                            <CAvatar\n                              size='md'\n                              src={item.avatar.src}\n                              status={item.avatar.status}\n                            />\n                          )}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <div>{item.user.name}</div>\n                          <div className='small text-medium-emphasis'>\n                            <span>{item.user.new ? 'کاربر جدید' : ''}</span> |\n                            تاریخ عضویت: {item.user.registered}\n                          </div>\n                        </CTableDataCell>\n                        <CTableDataCell>{item?.country?.email}</CTableDataCell>\n                        <CTableDataCell>\n                          {`${item?.country?.phoneNumber} ${item?.country?.countryCode}+`}\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <div className='small text-medium-emphasis'>\n                            آخرین بروزرسانی\n                          </div>\n                          <strong>{item.activity}</strong>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))}\n                  </CTableBody>\n                </CTable>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      ) : (\n        <Products />\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}